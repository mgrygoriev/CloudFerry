# -*- mode: ruby -*-
# vi: set ft=ruby ts=2 sw=2 et sua= inex= :

config_file = "config.ini"
options = {}
File.foreach(config_file) { |line|
  option, value = line.split("=")
  option = option.strip()
  if !value.nil?
    value = value.strip()
    options[option] = value
  end
}

nodes = {
  "grizzly" => {
    "box" => "openstack-user/precise-grizzly",
    "ip" => "#{options['grizzly_ip']}",
    "memory" => 2560,
    "role" => "openstack"
  },
  "icehouse" => {
    "box" => "openstack-user/trusty-icehouse",
    "ip" => "#{options['icehouse_ip']}",
    "memory" => 4096,
    "role" => "openstack"
  },
  "juno" => {
    "box" => "openstack-user/juno",
    "ip" => "#{options['juno_ip']}",
    "memory" => 4096,
    "role" => "devstack",
    "branch" => 'stable/juno'
  },
  "nfs" => {
    "box" => "openstack-user/nfs-server",
    "ip" => "#{options['nfs_ip']}",
    "memory" => 256,
    "cpus" => 1
  }
}

Vagrant.require_version '>= 1.6.0'

Vagrant.configure(2) do |config|
  config.vm.provision "shell", path: "./provision/prerequisites.sh"
  etc_hosts = nodes.map { |name, data| [data["ip"], name].join(' ') }.join("\n")

  nodes.each do |nodename, nodedata|
    config.vm.define nodename do |thisnode|
      thisnode.vm.box = nodedata['box']
      thisnode.vm.hostname = nodename
      thisnode.vm.provision "shell", inline: "echo '#{etc_hosts}' >> /etc/hosts"
      thisnode.vm.provision "shell",
        path: "./provision/keys.sh",
        args: [ "--public-key", File.read("#{ENV["HOME"]}/#{options['public_key_path']}").strip() ]
      
      case nodedata.fetch("role", "")
        when "openstack"
          thisnode.vm.provision "shell", path: "./provision/fix_interfaces.sh"
          if nodename == "grizzly" then
            thisnode.vm.provision "shell", path: "./provision/qemu.sh"
          elsif nodename == "icehouse" then
            thisnode.vm.provision "shell", path: "./provision/cleanup_nova_instances.sh"
          end
          thisnode.vm.provision "shell", path: "./provision/libvirt.sh"
        when "devstack"
          thisnode.vm.provision "file",
            source: "./provision/devstack/local_juno.conf",
            destination: "/tmp/local.conf"
          thisnode.vm.provision "shell",
            privileged: false,
            path: "./provision/devstack/devstack.sh",
            args: [ "--branch", "#{nodedata['branch']}" ]        
      end

      thisnode.vm.network "private_network", ip: nodedata['ip']

      thisnode.vm.provider "virtualbox" do |v|
        v.memory = nodedata.fetch("memory", 1024)
        v.cpus = nodedata.fetch("cpus", 2)
        v.customize ["modifyvm", :id, "--nicpromisc2", "allow-all"]
      end
    end
  end
end
